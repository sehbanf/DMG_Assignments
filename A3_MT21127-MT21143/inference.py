# -*- coding: utf-8 -*-
"""Q2DMGA3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pS-pt-Xs7dxJFMgdA71XjYpp5X5M0BkW
"""

import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
import pickle

def mapping(y_pred):
  lst = []
  for i in y_pred:
    if i==0:
      lst.append(1)
    elif i==4:
      lst.append(3)
    else :
      lst.append(2)
  return lst

def predict(test_set) :
    filename = 'final_model.sav'
    best_model = pickle.load(open(filename, 'rb'))
    # Do all preprocessings inside this function only.
    test_data = pd.read_csv(test_set)
    #test_data = test_data.drop_duplicates()
    labelencoder = LabelEncoder()
    test_data['Elevation'] = labelencoder.fit_transform(test_data['Elevation'])
    test_data['Aspect'] = labelencoder.fit_transform(test_data['Aspect'])
    test_data['Slope'] = labelencoder.fit_transform(test_data['Slope'])
    test_data['Hillshade_9am'] = labelencoder.fit_transform(test_data['Hillshade_9am'])
    test_data['Hillshade_Noon'] = labelencoder.fit_transform(test_data['Hillshade_Noon'])
    test_data['Horizontal_Distance_To_Fire_Points'] = labelencoder.fit_transform(test_data['Horizontal_Distance_To_Fire_Points'])
    # predict on the test set provided
    y_pred = best_model.predict(test_data)
    prediction = mapping(y_pred)
    
    return prediction